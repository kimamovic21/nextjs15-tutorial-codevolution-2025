Next.js 15 Tutorial Beginner to Advanced


App installation

-open link: https://nextjs.org/
-open link: https://nextjs.org/docs/app/getting-started/installation
-create folder hello-world 
-enter folder cd hello-world and type command: npx create-next-app@latest .


Project Structure

-type command: npm run dev
-open link: https://nextjs.org/docs/app/getting-started/project-structure


Before We Start

-open link: https://nextjs.org/docs/app/getting-started/server-and-client-components


Routing

-open link: https://nextjs.org/docs/pages/building-your-application/routing
-create new Next.js app routing-demo
-create folders about and profile
-in folders about and profile create components page.tsx
-open rotes: http://localhost:3000/about and http://localhost:3000/profile
-open route: http://localhost:3000/test


Nested routes

-open link: https://nextjs.org/docs/app/getting-started/layouts-and-pages
-create folder blog and component page.tsx
-open route: http://localhost:3000/blog
-in folder blog create folders first and second
-in folders first and second create components page.tsx
-open route: http://localhost:3000/blog/first and http://localhost:3000/blog/second


Dynamic routes

-open link: https://nextjs.org/docs/pages/building-your-application/routing/dynamic-routes
-create folder products and component page.tsx
-open route: http://localhost:3000/products
-create folder [productId] and component page.tsx
-open route: http://localhost:3000/products/[productId]
-in component [productId]/page.tsx add to function ProductDetails() parameter params with type Promise
-make function ProductDetailsPage() async
-destructure variable const { productId } from await params


Nested dynamic routes

-in folder [productId] create folders reviews and [reviewId]
-in folder reviews create component page.tsx
-in component reviews/page.tsx create async function ReviewsPage()
-add to function ReviewsPage() parameter params with type Promise
-destructure variable const { productId } from await params
-open route: http://localhost:3000/products/1/reviews
-in folder [reviewId] create component page.tsx
-in component [reviewId]/page.tsx create async function ProductReviewPage()
-add to function ProductReviewPage() parameter params with type Promise
-destructure variables const { productId, reviewId } from await params
-open route: http://localhost:3000/products/1/reviews/1


Catch all segments

-create folders docs and [...slug]
-in folder [...slug] create component page.tsx
-in component [...slug]/page.tsx create async function SlugPage()
-add to function SlugPage() parameter params with type Promise
-destructure variable const { slug } from await params
-open route: http://localhost:3000/docs/feature1/concept1/example1
-open route: http://localhost:3000/docs/routing
-open route: http://localhost:3000/docs/routing/catch-all-segments


Not found page

-open link: https://nextjs.org/docs/app/api-reference/file-conventions/not-found
-in folder app create component not-found.tsx
-in component not-found.tsx create function NotFoundPage()
-in component [reviewId]/page.tsx import function notFound from package next/navigation
-open route: http://localhost:3000/test
-in folder [reviewId] create component not-found.tsx
-in component [reviewId]/not-found.tsx add directive 'use client'
-create and export function NotFoundPage()
-import function usePathname from package next/navigation
-create variables const pathname, const productId and const reviewId
-open route: http://localhost:3000/products/1/reviews/10000


File colocation

-create folder dashboard and components line-chart.tsx and page.tsx


Private folders

-create folder _lib and component page.tsx
-open route: http://localhost:3000/_lib


Route groups

-open link: https://nextjs.org/docs/app/api-reference/file-conventions/route-groups
-create folder (auth)
-in folder (auth) create folders register, login and forgot-password
-create components page.tsx
-open route: http://localhost:3000/register
-open route: http://localhost:3000/login
-open route: http://localhost:3000/forgot-password


Layouts

-open link: https://nextjs.org/docs/pages/building-your-application/routing/pages-and-layoutshttps://nextjs.org/docs/pages/building-your-application/routing/pages-and-layouts
-in component layout.tsx create elements header and footer


Nested layouts

-in folder [productId] create component layout.tsx
-open route: http://localhost:3000/products/1